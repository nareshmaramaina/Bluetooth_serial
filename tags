!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
Bluetooth_Switch	Bluetooth_init.c	/^int Bluetooth_Switch(int arg)$/;"	f	typeref:typename:int
Check_Bluetooth_device	Bluetooth_init.c	/^int  Check_Bluetooth_device(int times)$/;"	f	typeref:typename:int
Check_Config_Mode	Bluetooth_init.c	/^int Check_Config_Mode()$/;"	f	typeref:typename:int
Check_and_Copy_USB_Node	USB_mode.c	/^int Check_and_Copy_USB_Node(char *usb_node)$/;"	f	typeref:typename:int
Copy_Weight_data_of_Bluetooth_node	Bluetooth_Mode.c	/^int Copy_Weight_data_of_Bluetooth_node(char *data)$/;"	f	typeref:typename:int
Copy_Weight_data_of_Bluetooth_node	Example.c	/^int Copy_Weight_data_of_Bluetooth_node(char *data)$/;"	f	typeref:typename:int
ERROR	bkp.c	/^#define ERROR /;"	d	file:
FAILURE	bkp.c	/^#define FAILURE /;"	d	file:
Get_Weight_data_of_Bluetooth	Bluetooth_Mode.c	/^int  Get_Weight_data_of_Bluetooth(char *client_btaddr,char *passkey,char *data) \/\/ bluetooth U/;"	f	typeref:typename:int
Get_Weight_data_of_Serial	Serial_Mode.c	/^int Get_Weight_data_of_Serial(char *data)$/;"	f	typeref:typename:int
Get_Weight_data_of_USB	USB_mode.c	/^int Get_Weight_data_of_USB(char *data)$/;"	f	typeref:typename:int
Pair	Bluetooth_Mode.c	/^int Pair(char *Passkey, char *macid)$/;"	f	typeref:typename:int
Pair	Example.c	/^inGt Pair(char *Passkey, char *macid)$/;"	f	typeref:typename:inGt
SUCCESS	bkp.c	/^#define SUCCESS /;"	d	file:
USB_init	USB_mode.c	/^int USB_init()$/;"	f	typeref:typename:int
bt_connect	Bluetooth_Mode.c	/^void bt_connect(char *bt_id)$/;"	f	typeref:typename:void
bt_connect	bkp.c	/^int bt_connect(char *bt_id)$/;"	f	typeref:typename:int
bt_node_chk	bkp.c	/^int bt_node_chk()$/;"	f	typeref:typename:int
bt_paring	Example.c	/^int bt_paring(char *Passkey, char *passkey)$/;"	f	typeref:typename:int
bt_paring	bkp.c	/^int bt_paring(char *client_btaddr, char *passkey)$/;"	f	typeref:typename:int
bt_pwr_on	bkp.c	/^int bt_pwr_on()$/;"	f	typeref:typename:int
bt_pwroff	Bluetooth_Mode.c	/^int bt_pwroff()$/;"	f	typeref:typename:int
bt_pwroff	bkp.c	/^int bt_pwroff()$/;"	f	typeref:typename:int
bt_scan	bkp.c	/^int bt_scan(char *bt_id)$/;"	f	typeref:typename:int
copy_weight_data	read_Ws_data.c	/^int copy_weight_data(char *device_file,int baudrate,char *data)$/;"	f	typeref:typename:int
get_bluetooth_macid	Bluetooth_Mode.c	/^int get_bluetooth_macid(char *client_btaddr, char *macid)$/;"	f	typeref:typename:int
main	example.c	/^int main()$/;"	f	typeref:typename:int
main	main.c	/^int main()$/;"	f	typeref:typename:int
parse_and_copy_format_data	example.c	/^int parse_and_copy_format_data(char *inputdata,char *outputdata)$/;"	f	typeref:typename:int
parse_and_copy_format_data	read_Ws_data.c	/^int parse_and_copy_format_data(char *inputdata,char *outputdata)$/;"	f	typeref:typename:int
usb_device_presence	Bluetooth_init.c	/^int usb_device_presence (char *vendor_id, char *product_id)$/;"	f	typeref:typename:int
usb_node_check	usb_check.c	/^int usb_node_check(char *usb_node)$/;"	f	typeref:typename:int
